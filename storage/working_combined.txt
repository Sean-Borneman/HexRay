=== SOURCE_C_START ===
/*==============================================================================
 * CONSOLIDATED DECOMPILED FUNCTIONS
 * Program: 5a024eae4e324e78700bbc932e05dddb
 * Generated: Sat Sep 13 14:34:08 EDT 2025
 * ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/*****************************************************************************
 * Function: _DT_INIT
 * Address: 00101000
 * Size: 27 bytes
 *****************************************************************************/



void _DT_INIT(void)



{

  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {

    (*(code *)PTR___gmon_start___00103fe8)();

  }

  return;

}





/*****************************************************************************
 * Function: FUN_00101020
 * Address: 00101020
 * Size: 13 bytes
 *****************************************************************************/



void FUN_00101020(void)



{

  (*(code *)PTR_00103f70)();

  return;

}





/*****************************************************************************
 * Function: FUN_001010f0
 * Address: 001010f0
 * Size: 11 bytes
 *****************************************************************************/



void FUN_001010f0(void)



{

  (*(code *)PTR___cxa_finalize_00103ff8)();

  return;

}





/*****************************************************************************
 * Function: getenv
 * Address: 00101100
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



char * getenv(char *__name)



{

  char *pcVar1;

  

  pcVar1 = (char *)(*(code *)PTR_getenv_00103f78)();

  return pcVar1;

}





/*****************************************************************************
 * Function: putchar
 * Address: 00101110
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int putchar(int __c)



{

  int iVar1;

  

  iVar1 = (*(code *)PTR_putchar_00103f80)();

  return iVar1;

}





/*****************************************************************************
 * Function: puts
 * Address: 00101120
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int puts(char *__s)



{

  int iVar1;

  

  iVar1 = (*(code *)PTR_puts_00103f88)();

  return iVar1;

}





/*****************************************************************************
 * Function: printf
 * Address: 00101140
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int printf(char *__format,...)



{

  int iVar1;

  

  iVar1 = (*(code *)PTR_printf_00103f98)();

  return iVar1;

}





/*****************************************************************************
 * Function: srand
 * Address: 00101150
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



void srand(uint __seed)



{

  (*(code *)PTR_srand_00103fa0)();

  return;

}





/*****************************************************************************
 * Function: getchar
 * Address: 00101160
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int getchar(void)



{

  int iVar1;

  

  iVar1 = (*(code *)PTR_getchar_00103fa8)();

  return iVar1;

}





/*****************************************************************************
 * Function: time
 * Address: 00101170
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



time_t time(time_t *__timer)



{

  time_t tVar1;

  

  tVar1 = (*(code *)PTR_time_00103fb0)();

  return tVar1;

}





/*****************************************************************************
 * Function: random
 * Address: 00101180
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



long random(void)



{

  long lVar1;

  

  lVar1 = (*(code *)PTR_random_00103fb8)();

  return lVar1;

}





/*****************************************************************************
 * Function: fflush
 * Address: 00101190
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int fflush(FILE *__stream)



{

  int iVar1;

  

  iVar1 = (*(code *)PTR_fflush_00103fc0)();

  return iVar1;

}





/*****************************************************************************
 * Function: exit
 * Address: 001011a0
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



void exit(int __status)



{

  (*(code *)PTR_exit_00103fc8)();

  return;

}





/*****************************************************************************
 * Function: rand
 * Address: 001011b0
 * Size: 11 bytes
 *****************************************************************************/



/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int rand(void)



{

  int iVar1;

  

  iVar1 = (*(code *)PTR_rand_00103fd0)();

  return iVar1;

}





/*****************************************************************************
 * Function: entry
 * Address: 001011c0
 * Size: 47 bytes
 *****************************************************************************/



void processEntry entry(undefined8 param_1,undefined8 param_2)



{

  undefined1 auStack_8 [8];

  

  (*(code *)PTR___libc_start_main_00103fe0)

            (FUN_001012a9,param_2,&stack0x00000008,FUN_001016b0,FUN_00101720,param_1,auStack_8);

  do {

                    /* WARNING: Do nothing block with infinite loop */

  } while( true );

}





/*****************************************************************************
 * Function: FUN_001011f0
 * Address: 001011f0
 * Size: 34 bytes
 *****************************************************************************/



/* WARNING: Removing unreachable block (ram,0x00101203) */

/* WARNING: Removing unreachable block (ram,0x0010120f) */



void FUN_001011f0(void)



{

  return;

}





/*****************************************************************************
 * Function: FUN_00101220
 * Address: 00101220
 * Size: 51 bytes
 *****************************************************************************/



/* WARNING: Removing unreachable block (ram,0x00101244) */

/* WARNING: Removing unreachable block (ram,0x00101250) */



void FUN_00101220(void)



{

  return;

}





/*****************************************************************************
 * Function: _FINI_0
 * Address: 00101260
 * Size: 54 bytes
 *****************************************************************************/



void _FINI_0(void)



{

  if (DAT_00104018 == '\0') {

    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {

      FUN_001010f0(PTR_LOOP_00104008);

    }

    FUN_001011f0();

    DAT_00104018 = 1;

    return;

  }

  return;

}





/*****************************************************************************
 * Function: _INIT_0
 * Address: 001012a0
 * Size: 9 bytes
 *****************************************************************************/



void _INIT_0(void)



{

  FUN_00101220();

  return;

}





/*****************************************************************************
 * Function: FUN_001012a9
 * Address: 001012a9
 * Size: 92 bytes
 *****************************************************************************/



undefined8 FUN_001012a9(void)



{

  time_t tVar1;

  undefined4 local_10;

  undefined4 local_c;

  

  tVar1 = time((time_t *)0x0);

  srand((uint)tVar1);

  local_10 = 0;

  while (local_10 == 0) {

    local_10 = FUN_00101305();

  }

  local_c = 1;

  while (local_c != 0) {

    local_c = FUN_001014b0(local_10);

  }

  return 0;

}





/*****************************************************************************
 * Function: FUN_00101305
 * Address: 00101305
 * Size: 427 bytes
 *****************************************************************************/



int FUN_00101305(void)



{

  int iVar1;

  long in_FS_OFFSET;

  int local_3c;

  int local_38;

  int local_34;

  int local_30;

  int local_2c;

  int aiStack_28 [6];

  long local_10;

  

  local_10 = *(long *)(in_FS_OFFSET + 0x28);

  local_3c = 0;

  while (local_3c == 0) {

    for (local_38 = 0; local_38 < 5; local_38 = local_38 + 1) {

      iVar1 = rand();

      aiStack_28[local_38] = iVar1 % 9;

      local_3c = local_3c + aiStack_28[local_38];

    }

  }

  local_34 = 0;

  do {

    if (4 < local_34) {

      puts(":Calibration success");

      puts("!");

      fflush(stdout);

      local_3c = local_3c + 0xc;

LAB_0010149a:

      if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {

                    /* WARNING: Subroutine does not return */

        __stack_chk_fail();

      }

      return local_3c;

    }

    printf(":Calibrating (%d/5)...\n",(ulong)(local_34 + 1));

    putchar(0x3e);

    for (local_30 = 0; local_30 <= local_34; local_30 = local_30 + 1) {

      putchar(aiStack_28[local_30] + 0x31);

    }

    putchar(10);

    fflush(stdout);

    for (local_2c = 0; local_2c <= local_34; local_2c = local_2c + 1) {

      iVar1 = getchar();

      if ((char)iVar1 == -1) {

                    /* WARNING: Subroutine does not return */

        exit(0);

      }

      if ((int)(char)((char)iVar1 + -0x31) != aiStack_28[local_2c]) {

        puts(":Calibration failure");

        fflush(stdout);

        local_3c = 0;

        goto LAB_0010149a;

      }

    }

    local_34 = local_34 + 1;

  } while( true );

}





/*****************************************************************************
 * Function: FUN_001014b0
 * Address: 001014b0
 * Size: 500 bytes
 *****************************************************************************/



undefined8 FUN_001014b0(uint param_1)



{

  int iVar1;

  uint uVar2;

  undefined8 uVar3;

  long lVar4;

  char *pcVar5;

  long in_FS_OFFSET;

  int local_28;

  int local_24;

  uint local_20;

  char local_17 [7];

  long local_10;

  

  local_10 = *(long *)(in_FS_OFFSET + 0x28);

  for (local_28 = 0; local_28 < 7; local_28 = local_28 + 1) {

    local_17[local_28] = '\0';

  }

  do {

    for (local_24 = 0; local_24 < 6; local_24 = local_24 + 1) {

      local_17[local_24] = local_17[local_24 + 1];

    }

    iVar1 = getchar();

    if ((char)iVar1 == -1) {

                    /* WARNING: Subroutine does not return */

      exit(0);

    }

    local_17[6] = (char)iVar1 + -0x31;

  } while (((((local_17[0] != '\x05') || (local_17[1] != '\b')) || (local_17[2] != '\b')) ||

           ((local_17[3] != '\x02' || (local_17[4] != '\x03')))) ||

          ((local_17[5] != '\0' || (local_20 = param_1, local_17[6] != '\0'))));

  do {

    if ((int)local_20 < 10) {

      printf(">%d\n",(ulong)local_20);

      fflush(stdout);

      uVar3 = 1;

      goto LAB_0010168e;

    }

    lVar4 = random();

    uVar2 = (int)lVar4 + (int)(lVar4 / 9) * -9 + 1;

    printf(">%d\n",(ulong)uVar2);

    fflush(stdout);

    local_20 = local_20 - uVar2;

    iVar1 = getchar();

    if ((char)iVar1 == -1) {

                    /* WARNING: Subroutine does not return */

      exit(0);

    }

    iVar1 = (char)iVar1 + -0x30;

  } while (((iVar1 < 1) || (9 < iVar1)) || (local_20 = local_20 - iVar1, local_20 != 0));

  pcVar5 = getenv("FLAG");

  printf(":%s\n",pcVar5);

  fflush(stdout);

  uVar3 = 0;

LAB_0010168e:

  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {

    return uVar3;

  }

                    /* WARNING: Subroutine does not return */

  __stack_chk_fail();

}





/*****************************************************************************
 * Function: FUN_001016b0
 * Address: 001016b0
 * Size: 101 bytes
 *****************************************************************************/



void FUN_001016b0(undefined4 param_1,undefined8 param_2,undefined8 param_3)



{

  long lVar1;

  

  _DT_INIT();

  lVar1 = 0;

  do {

    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);

    lVar1 = lVar1 + 1;

  } while (lVar1 != 1);

  return;

}





/*****************************************************************************
 * Function: FUN_00101720
 * Address: 00101720
 * Size: 5 bytes
 *****************************************************************************/



void FUN_00101720(void)



{

  return;

}





/*****************************************************************************
 * Function: _DT_FINI
 * Address: 00101728
 * Size: 13 bytes
 *****************************************************************************/



void _DT_FINI(void)



{

  return;

}





/*****************************************************************************
 * Function: getenv
 * Address: 00105000
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



char * getenv(char *__name)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: putchar
 * Address: 00105008
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int putchar(int __c)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: _ITM_deregisterTMCloneTable
 * Address: 00105010
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */



void _ITM_deregisterTMCloneTable(void)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: puts
 * Address: 00105018
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int puts(char *__s)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: printf
 * Address: 00105028
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int printf(char *__format,...)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: srand
 * Address: 00105038
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



void srand(uint __seed)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: getchar
 * Address: 00105040
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int getchar(void)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: time
 * Address: 00105050
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



time_t time(time_t *__timer)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: random
 * Address: 00105058
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



long random(void)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: fflush
 * Address: 00105060
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int fflush(FILE *__stream)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: exit
 * Address: 00105068
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



void exit(int __status)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: _ITM_registerTMCloneTable
 * Address: 00105070
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */



void _ITM_registerTMCloneTable(void)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}





/*****************************************************************************
 * Function: rand
 * Address: 00105078
 * Size: 1 bytes
 *****************************************************************************/



/* WARNING: Control flow encountered bad instruction data */

/* WARNING: Unknown calling convention -- yet parameter storage is locked */



int rand(void)



{

                    /* WARNING: Bad instruction - Truncating control flow here */

  halt_baddata();

}
=== SOURCE_C_END ===

=== OBJ_DUMP_START ===
================================================================================
CONSOLIDATED DATA EXPORT
Program: 5a024eae4e324e78700bbc932e05dddb
Generated: Sat Sep 13 14:34:08 EDT 2025
================================================================================

/******************************************************************************
 * MEMORY BLOCKS AND DATA SECTIONS
 ******************************************************************************/

Block: segment_2.1
Range: 00100000 - 00100317
Size: 792 bytes
------------------------------------------------------------
  00100000: /ELF/Elf64_Ehdr
pack(disabled)
Structure Elf64_Ehdr {
   0   byte   1   e_ident_magic_num   ""
   1   string   3   e_ident_magic_str   ""
   4   byte   1   e_ident_class   ""
   5   byte   1   e_ident_data   ""
   6   byte   1   e_ident_version   ""
   7   byte   1   e_ident_osabi   ""
   8   byte   1   e_ident_abiversion   ""
   9   byte[7]   7   e_ident_pad   ""
   16   word   2   e_type   ""
   18   word   2   e_machine   ""
   20   dword   4   e_version   ""
   24   qword   8   e_entry   ""
   32   qword   8   e_phoff   ""
   40   qword   8   e_shoff   ""
   48   dword   4   e_flags   ""
   52   word   2   e_ehsize   ""
   54   word   2   e_phentsize   ""
   56   word   2   e_phnum   ""
   58   word   2   e_shentsize   ""
   60   word   2   e_shnum   ""
   62   word   2   e_shstrndx   ""
}
Length: 64 Alignment: 1
 = undefined
  00100040: Elf64_Phdr[13] = undefined
Items in block: 2

Block: .interp
Range: 00100318 - 00100333
Size: 28 bytes
------------------------------------------------------------
  00100318: TerminatedCString = /lib64/ld-linux-x86-64.so.2
Items in block: 1

Block: .note.gnu.property
Range: 00100338 - 00100357
Size: 32 bytes
------------------------------------------------------------
  00100338: /ELF/NoteGnuProperty_4
pack(disabled)
Structure NoteGnuProperty_4 {
   0   dword   4   namesz   "Length of name field"
   4   dword   4   descsz   "Length of description field"
   8   dword   4   type   "Vendor specific type"
   12   string   4   name   "Vendor name"
}
Length: 16 Alignment: 1
 = undefined
  00100348: /NoteGnuPropertyElement_4
pack(disabled)
Structure NoteGnuPropertyElement_4 {
   0   dword   4   prType   ""
   4   dword   4   prDatasz   ""
   8   byte[4]   4   data   ""
}
Length: 12 Alignment: 1
 = undefined
Items in block: 2

Block: .note.gnu.build-id
Range: 00100358 - 0010037b
Size: 36 bytes
------------------------------------------------------------
  00100358: /ELF/GnuBuildId
pack(disabled)
Structure GnuBuildId {
   0   dword   4   namesz   "Length of name field"
   4   dword   4   descsz   "Length of description field"
   8   dword   4   type   "Vendor specific type"
   12   string   4   name   "Vendor name"
   16   byte[20]   20   hash   ""
}
Length: 36 Alignment: 1
 = undefined
Items in block: 1

Block: .note.ABI-tag
Range: 0010037c - 0010039b
Size: 32 bytes
------------------------------------------------------------
  0010037c: /ELF/NoteAbiTag
pack(disabled)
Structure NoteAbiTag {
   0   dword   4   namesz   "Length of name field"
   4   dword   4   descsz   "Length of description field"
   8   dword   4   type   "Vendor specific type"
   12   string   4   name   "Vendor name"
   16   dword   4   abiType   "0 == Linux"
   20   dword[3]   12   requiredKernelVersion   "Major.minor.patch"
}
Length: 32 Alignment: 1
 = undefined
Items in block: 1

Block: .gnu.hash
Range: 001003a0 - 001003c7
Size: 40 bytes
------------------------------------------------------------
  001003a0: dword = 0x2
  001003a4: dword = 0x11
  001003a8: dword = 0x1
  001003ac: dword = 0x6
  001003b0: qword[1] = undefined
  001003b8: dword[2] = undefined
  001003c0: dword[2] = undefined
Items in block: 7

Block: .dynsym
Range: 001003c8 - 0010058f
Size: 456 bytes
------------------------------------------------------------
  001003c8: Elf64_Sym[19] = undefined
Items in block: 1

Block: .dynstr
Range: 00100590 - 0010066f
Size: 224 bytes
------------------------------------------------------------
  00100591: string-utf8 = libc.so.6
  0010059b: string-utf8 = fflush
  001005a2: string-utf8 = exit
  001005a7: string-utf8 = srand
  001005ad: string-utf8 = puts
  001005b2: string-utf8 = time
  001005b7: string-utf8 = __stack_chk_fail
  001005c8: string-utf8 = putchar
  001005d0: string-utf8 = printf
  001005d7: string-utf8 = getchar
  001005df: string-utf8 = stdout
  001005e6: string-utf8 = getenv
  001005ed: string-utf8 = __cxa_finalize
  001005fc: string-utf8 = __libc_start_main
  0010060e: string-utf8 = random
  00100615: string-utf8 = GLIBC_2.4
  0010061f: string-utf8 = GLIBC_2.2.5
  0010062b: string-utf8 = _ITM_deregisterTMCloneTable
  00100647: string-utf8 = __gmon_start__
  00100656: string-utf8 = _ITM_registerTMCloneTable
Items in block: 20

Block: .gnu.version
Range: 00100670 - 00100695
Size: 38 bytes
------------------------------------------------------------
  00100670: word = 0x0
  00100672: word = 0x2
  00100674: word = 0x2
  00100676: word = 0x0
  00100678: word = 0x2
  0010067a: word = 0x3
  0010067c: word = 0x2
  0010067e: word = 0x2
  00100680: word = 0x2
  00100682: word = 0x2
  00100684: word = 0x0
  00100686: word = 0x2
  00100688: word = 0x2
  0010068a: word = 0x2
  0010068c: word = 0x2
  0010068e: word = 0x0
  00100690: word = 0x2
  00100692: word = 0x2
  00100694: word = 0x2
Items in block: 19

Block: .gnu.version_r
Range: 00100698 - 001006c7
Size: 48 bytes
------------------------------------------------------------
Items in block: 0

Block: .rela.dyn
Range: 001006c8 - 0010079f
Size: 216 bytes
------------------------------------------------------------
  001006c8: Elf64_Rela[9] = undefined
Items in block: 1

Block: .rela.plt
Range: 001007a0 - 001008bf
Size: 288 bytes
------------------------------------------------------------
  001007a0: Elf64_Rela[12] = undefined
Items in block: 1

Block: .init
Range: 00101000 - 0010101a
Size: 27 bytes
------------------------------------------------------------
Items in block: 0

Block: .plt
Range: 00101020 - 001010ef
Size: 208 bytes
------------------------------------------------------------
Items in block: 0

Block: .plt.got
Range: 001010f0 - 001010ff
Size: 16 bytes
------------------------------------------------------------
Items in block: 0

Block: .plt.sec
Range: 00101100 - 001011bf
Size: 192 bytes
------------------------------------------------------------
Items in block: 0

Block: .text
Range: 001011c0 - 00101724
Size: 1381 bytes
------------------------------------------------------------
Items in block: 0

Block: .fini
Range: 00101728 - 00101734
Size: 13 bytes
------------------------------------------------------------
Items in block: 0

Block: .rodata
Range: 00102000 - 00102056
Size: 87 bytes
------------------------------------------------------------
  00102004: string = :Calibrating (%d/5)...

  0010201c: string = :Calibration failure
  00102031: string = :Calibration success
Items in block: 3

Block: .eh_frame_hdr
Range: 00102058 - 001020ab
Size: 84 bytes
------------------------------------------------------------
  00102058: /eh_frame_hdr
pack(disabled)
Structure eh_frame_hdr {
   0   byte   1   eh_frame_hdr_version   "Exception Handler Frame Header Version"
   1   dwfenc   1   eh_frame_pointer_encoding   "Exception Handler Frame Pointer Encoding"
   2   dwfenc   1   eh_frame_desc_entry_count_encoding   "Encoding of # of Exception Handler FDEs"
   3   dwfenc   1   eh_frame_table_encoding   "Exception Handler Table Encoding"
}
Length: 4 Alignment: 1
 = undefined
  0010205c: dword = 0x54
  00102060: dword = 0x9
  00102064: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  0010206c: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  00102074: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  0010207c: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  00102084: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  0010208c: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  00102094: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  0010209c: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
  001020a4: /fde_table_entry
pack(disabled)
Structure fde_table_entry {
   0   dword   4   initial_loc   "Initial Location"
   4   dword   4   data_loc   "Data location"
}
Length: 8 Alignment: 1
 = undefined
Items in block: 12

Block: .eh_frame
Range: 001020b0 - 001021f7
Size: 328 bytes
------------------------------------------------------------
  001020b0: dword = 0x14
  001020b4: dword = 0x0
  001020b8: byte = 0x1
  001020b9: string = zR
  001020bc: uleb128 = 0x1
  001020bd: sleb128 = -0x8
  001020be: byte = 0x10
  001020bf: uleb128 = 0x1
  001020c0: dwfenc = DW_EH_PE_sdata4 | DW_EH_PE_pcrel
  001020c1: byte[7] = undefined
  001020c8: dword = 0x14
  001020cc: dword = 0x1c
  001020d0: dword = 0xfffff0f0
  001020d4: dword = 0x2f
  001020d8: uleb128 = 0x0
  001020d9: byte[7] = undefined
  001020e0: dword = 0x24
  001020e4: dword = 0x34
  001020e8: dword = 0xffffef38
  001020ec: dword = 0xd0
  001020f0: uleb128 = 0x0
  001020f1: byte[23] = undefined
  00102108: dword = 0x14
  0010210c: dword = 0x5c
  00102110: dword = 0xffffefe0
  00102114: qword = 0x10
  0010211c: uleb128 = 0x0
  0010211d: byte[3] = undefined
  00102120: dword = 0x14
  00102124: dword = 0x74
  00102128: dword = 0xffffefd8
  0010212c: qword = 0xc0
  00102134: uleb128 = 0x0
  00102135: byte[3] = undefined
  00102138: dword = 0x1c
  0010213c: dword = 0x8c
  00102140: dword = 0xfffff169
  00102144: dword = 0x5c
  00102148: uleb128 = 0x0
  00102149: byte[15] = undefined
  00102158: dword = 0x1c
  0010215c: dword = 0xac
  00102160: dword = 0xfffff1a5
  00102164: dword = 0x1ab
  00102168: uleb128 = 0x0
  00102169: byte[15] = undefined
  00102178: dword = 0x1c
  0010217c: dword = 0xcc
  00102180: dword = 0xfffff330
  00102184: dword = 0x1f4
  00102188: uleb128 = 0x0
  00102189: byte[15] = undefined
  00102198: dword = 0x44
  0010219c: dword = 0xec
  001021a0: dword = 0xfffff510
  001021a4: dword = 0x65
  001021a8: uleb128 = 0x0
  001021a9: byte[55] = undefined
  001021e0: dword = 0x10
  001021e4: dword = 0x134
  001021e8: dword = 0xfffff538
  001021ec: qword = 0x5
  001021f4: dword = 0x0
Items in block: 63

Block: .init_array
Range: 00103d60 - 00103d67
Size: 8 bytes
------------------------------------------------------------
  00103d60: pointer = 001012a0
Items in block: 1

Block: .fini_array
Range: 00103d68 - 00103d6f
Size: 8 bytes
------------------------------------------------------------
  00103d68: pointer = 00101260
Items in block: 1

Block: .dynamic
Range: 00103d70 - 00103f5f
Size: 496 bytes
------------------------------------------------------------
  00103d70: Elf64_Dyn[27] = undefined
Items in block: 1

Block: .got
Range: 00103f60 - 00103fff
Size: 160 bytes
------------------------------------------------------------
  00103f60: pointer = 00103d70
  00103f68: pointer = 00000000
  00103f70: pointer = 00000000
  00103f78: pointer = 00105000
  00103f80: pointer = 00105008
  00103f88: pointer = 00105018
  00103f90: pointer = 00105020
  00103f98: pointer = 00105028
  00103fa0: pointer = 00105038
  00103fa8: pointer = 00105040
  00103fb0: pointer = 00105050
  00103fb8: pointer = 00105058
  00103fc0: pointer = 00105060
  00103fc8: pointer = 00105068
  00103fd0: pointer = 00105078
  00103fd8: pointer = 00105010
  00103fe0: pointer = 00105030
  00103fe8: pointer = 00105048
  00103ff0: pointer = 00105070
  00103ff8: pointer = 00105080
Items in block: 20

Block: .data
Range: 00104000 - 0010400f
Size: 16 bytes
------------------------------------------------------------
  00104008: pointer = 00104008
Items in block: 1

Block: .bss
Range: 00104010 - 0010401f
Size: 16 bytes
------------------------------------------------------------
  00104010: undefined8 = 0x0
  00104018: undefined1 = 0x0
Items in block: 2

Block: EXTERNAL
Range: 00105000 - 00105087
Size: 136 bytes
------------------------------------------------------------
Items in block: 0

Block: .comment
Range: .comment::00000000 - .comment::0000002a
Size: 43 bytes
------------------------------------------------------------
  .comment::00000000: string-utf8 = GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
Items in block: 1

Block: .shstrtab
Range: .shstrtab::00000000 - .shstrtab::00000109
Size: 266 bytes
------------------------------------------------------------
  .shstrtab::00000001: string-utf8 = .shstrtab
  .shstrtab::0000000b: string-utf8 = .interp
  .shstrtab::00000013: string-utf8 = .note.gnu.property
  .shstrtab::00000026: string-utf8 = .note.gnu.build-id
  .shstrtab::00000039: string-utf8 = .note.ABI-tag
  .shstrtab::00000047: string-utf8 = .gnu.hash
  .shstrtab::00000051: string-utf8 = .dynsym
  .shstrtab::00000059: string-utf8 = .dynstr
  .shstrtab::00000061: string-utf8 = .gnu.version
  .shstrtab::0000006e: string-utf8 = .gnu.version_r
  .shstrtab::0000007d: string-utf8 = .rela.dyn
  .shstrtab::00000087: string-utf8 = .rela.plt
  .shstrtab::00000091: string-utf8 = .init
  .shstrtab::00000097: string-utf8 = .plt.got
  .shstrtab::000000a0: string-utf8 = .plt.sec
  .shstrtab::000000a9: string-utf8 = .text
  .shstrtab::000000af: string-utf8 = .fini
  .shstrtab::000000b5: string-utf8 = .rodata
  .shstrtab::000000bd: string-utf8 = .eh_frame_hdr
  .shstrtab::000000cb: string-utf8 = .eh_frame
  .shstrtab::000000d5: string-utf8 = .init_array
  .shstrtab::000000e1: string-utf8 = .fini_array
  .shstrtab::000000ed: string-utf8 = .dynamic
  .shstrtab::000000f6: string-utf8 = .data
  .shstrtab::000000fc: string-utf8 = .bss
  .shstrtab::00000101: string-utf8 = .comment
Items in block: 26

Block: _elfSectionHeaders
Range: _elfSectionHeaders::00000000 - _elfSectionHeaders::0000073f
Size: 1856 bytes
------------------------------------------------------------
  _elfSectionHeaders::00000000: Elf64_Shdr[29] = undefined
Items in block: 1

/******************************************************************************
 * STRING DATA
 ******************************************************************************/

00100318: TerminatedCString = '/lib64/ld-linux-x86-64.so.2'
00100591: string-utf8 = 'libc.so.6'
0010059b: string-utf8 = 'fflush'
001005a2: string-utf8 = 'exit'
001005a7: string-utf8 = 'srand'
001005ad: string-utf8 = 'puts'
001005b2: string-utf8 = 'time'
001005b7: string-utf8 = '__stack_chk_fail'
001005c8: string-utf8 = 'putchar'
001005d0: string-utf8 = 'printf'
001005d7: string-utf8 = 'getchar'
001005df: string-utf8 = 'stdout'
001005e6: string-utf8 = 'getenv'
001005ed: string-utf8 = '__cxa_finalize'
001005fc: string-utf8 = '__libc_start_main'
0010060e: string-utf8 = 'random'
00100615: string-utf8 = 'GLIBC_2.4'
0010061f: string-utf8 = 'GLIBC_2.2.5'
0010062b: string-utf8 = '_ITM_deregisterTMCloneTable'
00100647: string-utf8 = '__gmon_start__'
00100656: string-utf8 = '_ITM_registerTMCloneTable'
00102004: string = ':Calibrating (%d/5)...\n'
0010201c: string = ':Calibration failure'
00102031: string = ':Calibration success'
001020b9: string = 'zR'
.comment::00000000: string-utf8 = 'GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0'
.shstrtab::00000001: string-utf8 = '.shstrtab'
.shstrtab::0000000b: string-utf8 = '.interp'
.shstrtab::00000013: string-utf8 = '.note.gnu.property'
.shstrtab::00000026: string-utf8 = '.note.gnu.build-id'
.shstrtab::00000039: string-utf8 = '.note.ABI-tag'
.shstrtab::00000047: string-utf8 = '.gnu.hash'
.shstrtab::00000051: string-utf8 = '.dynsym'
.shstrtab::00000059: string-utf8 = '.dynstr'
.shstrtab::00000061: string-utf8 = '.gnu.version'
.shstrtab::0000006e: string-utf8 = '.gnu.version_r'
.shstrtab::0000007d: string-utf8 = '.rela.dyn'
.shstrtab::00000087: string-utf8 = '.rela.plt'
.shstrtab::00000091: string-utf8 = '.init'
.shstrtab::00000097: string-utf8 = '.plt.got'
.shstrtab::000000a0: string-utf8 = '.plt.sec'
.shstrtab::000000a9: string-utf8 = '.text'
.shstrtab::000000af: string-utf8 = '.fini'
.shstrtab::000000b5: string-utf8 = '.rodata'
.shstrtab::000000bd: string-utf8 = '.eh_frame_hdr'
.shstrtab::000000cb: string-utf8 = '.eh_frame'
.shstrtab::000000d5: string-utf8 = '.init_array'
.shstrtab::000000e1: string-utf8 = '.fini_array'
.shstrtab::000000ed: string-utf8 = '.dynamic'
.shstrtab::000000f6: string-utf8 = '.data'
.shstrtab::000000fc: string-utf8 = '.bss'
.shstrtab::00000101: string-utf8 = '.comment'

Total strings: 52

/******************************************************************************
 * SYMBOL TABLE
 ******************************************************************************/

--- Function (60 symbols) ---
  EXTERNAL:00000001: getenv
  EXTERNAL:00000002: putchar
  EXTERNAL:00000003: puts
  EXTERNAL:00000004: __stack_chk_fail
  EXTERNAL:00000005: printf
  EXTERNAL:00000006: __libc_start_main
  EXTERNAL:00000007: srand
  EXTERNAL:00000008: getchar
  EXTERNAL:00000009: time
  EXTERNAL:0000000a: random
  EXTERNAL:0000000b: fflush
  EXTERNAL:0000000c: exit
  EXTERNAL:0000000d: rand
  EXTERNAL:0000000e: __cxa_finalize
  EXTERNAL:0000000f: _ITM_deregisterTMCloneTable
  EXTERNAL:00000010: _ITM_registerTMCloneTable
  EXTERNAL:00000011: __gmon_start__
  00101000: _DT_INIT
  00101020: FUN_00101020
  001010f0: FUN_001010f0
  00101100: getenv
  00101110: putchar
  00101120: puts
  00101130: __stack_chk_fail
  00101140: printf
  00101150: srand
  00101160: getchar
  00101170: time
  00101180: random
  00101190: fflush
  001011a0: exit
  001011b0: rand
  001011c0: entry
  001011f0: FUN_001011f0
  00101220: FUN_00101220
  00101260: _FINI_0
  001012a0: _INIT_0
  001012a9: FUN_001012a9
  00101305: FUN_00101305
  001014b0: FUN_001014b0
  001016b0: FUN_001016b0
  00101720: FUN_00101720
  00101728: _DT_FINI
  00105000: getenv
  00105008: putchar
  00105010: _ITM_deregisterTMCloneTable
  00105018: puts
  00105020: __stack_chk_fail
  00105028: printf
  00105030: __libc_start_main
  ... and 10 more

--- Label (100 symbols) ---
  00100040: Elf64_Phdr_ARRAY_00100040
  00100318: s_/lib64/ld-linux-x86-64.so.2_00100318
  00100338: NoteGnuProperty_4_00100338
  00100358: GnuBuildId_00100358
  0010037c: NoteAbiTag_0010037c
  001003a0: __DT_GNU_HASH
  001003c8: __DT_SYMTAB
  00100590: __DT_STRTAB
  00100670: __DT_VERSYM
  00100698: __DT_VERNEED
  001006c8: __DT_RELA
  001007a0: __DT_JMPREL
  00101000: __DT_INIT
  00101016: LAB_00101016
  00101218: LAB_00101218
  00101258: LAB_00101258
  00101287: LAB_00101287
  00101298: LAB_00101298
  001012cf: LAB_001012cf
  001012dc: LAB_001012dc
  001012eb: LAB_001012eb
  001012f8: LAB_001012f8
  00101329: LAB_00101329
  00101332: LAB_00101332
  00101379: LAB_00101379
  0010137f: LAB_0010137f
  00101391: LAB_00101391
  001013bd: LAB_001013bd
  001013d4: LAB_001013d4
  001013fe: LAB_001013fe
  00101416: LAB_00101416
  00101453: LAB_00101453
  00101457: LAB_00101457
  00101463: LAB_00101463
  0010149a: LAB_0010149a
  001014ae: LAB_001014ae
  001014d7: LAB_001014d7
  001014e5: LAB_001014e5
  001014eb: LAB_001014eb
  001014f4: LAB_001014f4
  0010150e: LAB_0010150e
  0010152c: LAB_0010152c
  00101573: LAB_00101573
  0010157a: LAB_0010157a
  001015af: LAB_001015af
  0010162c: LAB_0010162c
  0010168e: LAB_0010168e
  001016a2: LAB_001016a2
  001016f0: LAB_001016f0
  00101706: LAB_00101706
  ... and 50 more

================================================================================
EXPORT SUMMARY
================================================================================
Functions exported: 38
Data items: 188
Strings: 52
Symbols: 160
================================================================================
=== OBJ_DUMP_END ===
